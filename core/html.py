#!/usr/bin/env python3
# coding=utf-8
# Created by sharp.gan at 2017-09-04
# Above automatically generated by github.com/supersu097/EZcode4CLI

import json
import random

import requests
from bs4 import BeautifulSoup
from selenium import webdriver
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

from core import helper


def page_source_get(url, pagetype=None):
    USER_AGENTS = [
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; AcooBrowser; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 6.0; Acoo Browser; SLCC1; .NET CLR 2.0.50727; Media Center PC 5.0; .NET CLR 3.0.04506)",
        "Mozilla/4.0 (compatible; MSIE 7.0; AOL 9.5; AOLBuild 4337.35; Windows NT 5.1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)",
        "Mozilla/5.0 (Windows; U; MSIE 9.0; Windows NT 9.0; en-US)",
        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 2.0.50727; Media Center PC 6.0)",
        "Mozilla/5.0 (compatible; MSIE 8.0; Windows NT 6.0; Trident/4.0; WOW64; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; .NET CLR 1.0.3705; .NET CLR 1.1.4322)",
        "Mozilla/4.0 (compatible; MSIE 7.0b; Windows NT 5.2; .NET CLR 1.1.4322; .NET CLR 2.0.50727; InfoPath.2; .NET CLR 3.0.04506.30)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36"
    ]
    headers = {'User-Agent': random.choice(USER_AGENTS)}

    def source_get_by_phantomjs():
        dcap = dict(DesiredCapabilities.PHANTOMJS)
        dcap["phantomjs.page.settings.userAgent"] = random.choice(USER_AGENTS)
        driver = webdriver.PhantomJS(executable_path=helper.CURR_PATH + '/core/phantomjs-2.1.1',
                                     desired_capabilities=dcap)
        driver.get(url)
        driver.implicitly_wait(20)
        source = driver.page_source
        driver.quit()
        return source

    if pagetype is not None:
        return source_get_by_phantomjs()
    else:
        try:
            rep_data = requests.get(url, headers=headers).text
            if url.split('.')[-1] == 'json':
                return json.loads(rep_data)
            else:
                return rep_data

        except requests.exceptions.RequestException:
            helper.logger_getter().error('Network connection error')
            exit(1)


def first_a_tag_extract(page_source, rule):
    soup = BeautifulSoup(page_source, 'html5lib')
    first_url = soup.select(rule)[0]
    return first_url


def first_url_persistence(write_content, filename):
    helper.dir_check(helper.TEMP_DIR)
    with open(helper.TEMP_DIR + filename, 'w') as f:
        f.write(write_content)


def make_screenshot(url, filename):
    driver = webdriver.PhantomJS(executable_path=helper.CURR_PATH + '/core/phantomjs-2.1.1')
    driver.get(url)
    driver.execute_script('document.body.style.background = "white"')
    driver.implicitly_wait(20)
    driver.save_screenshot(filename)
    driver.quit()