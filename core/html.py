#!/usr/bin/env python3
# coding=utf-8
# Created by sharp.gan at 2017-09-04
# Above automatically generated by github.com/supersu097/EZcode4CLI

import json
import random
import time

import requests
from selenium import webdriver
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from user_agent import generate_user_agent
from core import helper


def page_source_get(url, pagetype=None):
    headers = {'User-Agent': generate_user_agent(os='win')}

    def source_get_by_phantomjs():
        dcap = dict(DesiredCapabilities.PHANTOMJS)
        dcap["phantomjs.page.settings.userAgent"] = headers['User-Agent']
        dcap["phantomjs.page.settings.loadImages"] = False
        driver = webdriver.PhantomJS(executable_path=helper.CURR_PATH + '/core/phantomjs-2.1.1',
                                     desired_capabilities=dcap)
        helper.logger_getter().debug('The phantomjs is running...')
        try:
            driver.implicitly_wait(5)
            driver.set_page_load_timeout(10)
            # 设置10秒脚本超时时间
            driver.set_script_timeout(10)
            driver.get(url)
            source = driver.page_source
            driver.quit()
            return source
        except Exception as e:
            helper.logger_getter().error(str(e))
            driver.quit()
            exit(1)

    if pagetype is not None:
        return source_get_by_phantomjs()
    else:
        for _ in range(3):
            try:
                seconds = random.choice([i / 10 for i in range(35, 82)])
                rep_data = requests.get(url, headers=headers).text
                if url.split('.')[-1] == 'json':
                    return json.loads(rep_data)
                else:
                    return rep_data
            except requests.exceptions.RequestException as e:
                helper.logger_getter().debug('Exception: ' + str(e))
                helper.logger_getter().debug(url)
                helper.logger_getter().debug('Sleep for ' + str(seconds) + 's after timeout...')
                time.sleep(seconds)


def make_screenshot(url, filename):
    driver = webdriver.PhantomJS(executable_path=helper.CURR_PATH + '/core/phantomjs-2.1.1')
    driver.get(url)
    driver.execute_script('document.body.style.background = "white"')
    driver.implicitly_wait(20)
    driver.save_screenshot(filename)
    driver.quit()
